{"version":3,"sources":["components/Nav/index.js","assets/cover/photo.png","components/About/index.js","assets/small/book-garden-screenshot-small.png","assets/small/portfolio-screenshot-small.png","assets/small/run-buddy-screenshot-small.png","assets/small/future-ram-screenshot-small.png","assets/small/weather-dashboard-screenshot-small.png","assets/small/collab-screenshot-small.png","components/Project/index.js","components/Footer/index.js","components/Contact/index.js","utils/helpers.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","data-testid","href","About","id","src","myPhoto","style","width","alt","class","Project","target","photo","photo3","photo4","photo2","photo5","photo6","Footer","ContactForm","useState","name","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","isValid","test","String","toLowerCase","validateEmail","value","console","log","length","onSubmit","preventDefault","htmlFor","type","defaultValue","onBlur","rows","App","Contact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.216ea8da.chunk.js","sourcesContent":["import React from 'react';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction Nav() {\n  return (\n    <header className=\"flex-row px-1\">\n  <h2>\n    <a  data-testid=\"link\" href=\"/\">\n       JasonAhmed\n    </a>\n  </h2>\n  <nav>\n    <ul className=\"flex-row nav nav-tabs\">\n      <li className=\"mx-2\">\n        <a data-testid=\"about\" href=\"#about\">\n          About me\n        </a>\n      </li>\n      <li className=\"mx-2\">\n        <a href=\"#project\">\n          Portfolio\n        </a>\n      </li>\n      <li className=\"mx-2\">\n        <a href=\"#contact\">\n        Contact\n        </a>\n      </li>\n      {/* <li className=\"mx-2\">\n        <a href=\"#resume\">\n          Resume\n        </a>\n      </li> */}\n    </ul>\n  </nav>\n</header>\n  );\n}\n\nexport default Nav;","export default __webpack_public_path__ + \"static/media/photo.d0b425c0.png\";","import React from 'react';\n// import coverImage from \"../../assets/cover/cover-image.jpg\";\nimport myPhoto from \"../../assets/cover/photo.png\";\n\nfunction About() {\n    return (\n        <section className=\"my-5\">\n            <div>\n            <h1 id=\"about\">About me</h1>\n            </div>\n            <br></br>\n            <div>\n                <img src={myPhoto} className=\"\" style={{ width: \"10%\"}} alt=\"MyPhoto\" />\n            </div>\n            <br></br>\n            <div class=\"flex-row hero\">\n            <h5 class=\"aboutMeText\">\n            Hi there! I am a Full-Stack Web Developer with a background in Capital Markets Finance and a life-long dedication to learning! \n            Recently earned a certificate in full stack development from UCLA, with skills in JavaScript, CSS, Bootstrap, React.js, the MERN Stack, and responsive web design. \n            I am effective at combining creativity and problem solving to develop user-friendly web applications with unique, eye-catching designs.\n            Known amongst colleagues for strong wit and attention to detail, no matter the complexity of the project.\n            </h5>\n            {/* <img src={coverImage} className=\"my-2\" style={{ width: \"100%\" }} alt=\"cover\" /> */}\n            </div>\n        </section>\n      );\n}\n\nexport default About;","export default __webpack_public_path__ + \"static/media/book-garden-screenshot-small.b31296b2.png\";","export default __webpack_public_path__ + \"static/media/portfolio-screenshot-small.ee4fa68b.png\";","export default __webpack_public_path__ + \"static/media/run-buddy-screenshot-small.a4b2a490.png\";","export default __webpack_public_path__ + \"static/media/future-ram-screenshot-small.2ba2e1d8.png\";","export default __webpack_public_path__ + \"static/media/weather-dashboard-screenshot-small.29a3dde5.png\";","export default __webpack_public_path__ + \"static/media/collab-screenshot-small.0506d0a5.png\";","import React from 'react';\nimport photo from \"../../assets/small/book-garden-screenshot-small.png\";\nimport photo2 from \"../../assets/small/portfolio-screenshot-small.png\";\nimport photo3 from \"../../assets/small/run-buddy-screenshot-small.png\";\nimport photo4 from \"../../assets/small/future-ram-screenshot-small.png\";\nimport photo5 from \"../../assets/small/weather-dashboard-screenshot-small.png\";\nimport photo6 from \"../../assets/small/collab-screenshot-small.png\";\n\n\nfunction Project() {\n    return (\n      <section>\n        <h1 id=\"project\">Gallery</h1>\n        <p>A sampling of my projects</p>\n      <div className=\"flex-row\">\n      <a href=\"https://jason-ahmed-123.github.io/groupproject1-book-garden/\" target = \"\">\n          <img src={photo} alt=\"Book Garden screenshot\" className=\"img-thumbnail mx-2\"/>\n      </a>\n      <a href = \"https://jason-ahmed-123.github.io/run-buddy/\" target = \"\">\n          <img src={photo3} alt=\"Run Buddy screenshot\" className=\"img-thumbnail mx-2\"/>\n      </a>\n      </div>\n      <div className=\"flex-row\">\n      <a href=\"https://wicked-ghoul-96440.herokuapp.com/\" target = \"\">\n          <img src={photo4} alt=\"future.RAM screenshot\" className=\"img-thumbnail mx-2\"/>\n      </a>\n      <a href=\"https://jason-ahmed-123.github.io/Week2-Challenge-Portfolio/\" target = \"\">\n          <img src={photo2} alt=\"Portfolio screenshot\" className=\"img-thumbnail mx-2\"/>\n      </a>\n      </div>\n      <div className=\"flex-row\">\n      <a href=\"https://jason-ahmed-123.github.io/week6-weather-dashboard/\" target = \"\">\n          <img src={photo5} alt=\"Weather Dashboard screenshot\" className=\"img-thumbnail mx-2\"/>\n      </a>\n      <a href = \"https://immense-wave-96747.herokuapp.com/\" target = \"\">\n          <img src={photo6} alt=\"Collab screenshot\" className=\"img-thumbnail mx-2\"/>\n      </a>\n      </div>\n      </section>\n    );\n  }\n\nexport default Project;","import React from 'react';\n\nfunction Footer() {\n\n  return (\n    <footer className=\"flex-row px-1\">\n  \n  <nav>\n    <ul className=\"flex-row\">\n    <li className=\"mx-2\">\n        &copy; 2020 - JasonAhmed\n      </li>\n      <li className=\"mx-2\">\n        <a href=\"https://github.com/Jason-Ahmed-123?tab=repositories\">\n          GitHub\n        </a>\n      </li>\n      <li className=\"mx-2\">\n        <a href=\"https://www.linkedin.com/in/jason-ahmed-0b6620193\">\n          LinkedIn\n        </a>\n      </li>\n      <li className=\"mx-2\">\n        <a href=\"https://soundcloud.com/user-580032759\">\n          Butterfly Stampede\n        </a>\n      </li>\n    </ul>\n  </nav>\n</footer>\n  );\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n  const { name, email, message } = formState;\n  const [errorMessage, setErrorMessage] = useState('');\n\n  function handleChange(e) {\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n      console.log(isValid);\n      // isValid conditional statement\n      if (!isValid) {\n        setErrorMessage('Your email is invalid.');\n      } else {\n        setErrorMessage('');\n      }\n    } else {\n      if (!e.target.value.length) {\n        setErrorMessage(`${e.target.name} is required.`);\n      } else {\n        setErrorMessage('');\n      }\n    }\n\n    if (!errorMessage) {\n      setFormState({ ...formState, [e.target.name]: e.target.value });\n    }\n  }\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(formState);\n  }\n\nreturn (\n    <section>\n      <h1 id=\"contact\">Contact me</h1>\n      <form id=\"contact-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input type=\"text\" defaultValue={name} onBlur={handleChange} name=\"name\" />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email address:</label>\n          <input type=\"email\" defaultValue={email} name=\"email\" onBlur={handleChange} />\n        </div>\n        <div>\n          <label htmlFor=\"message\">Message:</label>\n          <textarea name=\"message\" defaultValue={message} onBlur={handleChange} rows=\"4\" />\n        </div>\n\n        {errorMessage && (\n          <div>\n            <p className=\"error-text\">{errorMessage}</p>\n          </div>\n        )}\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </section>\n    );\n}\n    \nexport default ContactForm;","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React from 'react';\nimport Nav from './components/Nav';\nimport About from './components/About';\nimport Project from './components/Project';\nimport Footer from './components/Footer';\nimport ContactForm from './components/Contact';\n// import { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    // <Router>\n    <div>\n      <Nav></Nav>\n      <main>\n        <About></About>\n        <Project></Project>\n        \n        {/* <Switch>\n        <Route path=\"/contact\">\n            <ContactForm />\n          </Route>\n          <Route path=\"/contact\" component={ContactForm}/>\n        </Switch> */}\n        <ContactForm></ContactForm>\n      </main>\n      <Footer></Footer>\n    </div>\n    // </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}